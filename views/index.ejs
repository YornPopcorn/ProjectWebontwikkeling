<!doctype html>
<html lang="en">
<%- include('partials/head') %>
<body class="bg-light">
<%- include('partials/navbar') %>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4 mb-4">Guitar Overview</h1>
        </div>
    </div>

    <div class="row">
        <!-- Filter Sidebar -->
        <div class="col-md-3 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h3 class="h5 mb-0">Our Brands</h3>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        <% brands.forEach(brand => { %>
                            <li class="list-group-item">
                                <a href="/brand/<%= brand.id %>" class="text-decoration-none">
                                    <i class="fas fa-guitar me-2"></i>
                                    <%= brand.brandName %> <span class="badge bg-secondary"><%= brand.country %></span>
                                </a>
                            </li>
                        <% }); %>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-md-9">
            <div class="card shadow-sm">
                <div class="card-body">
                    <!-- Search filter -->
                    <div class="mb-3">
                        <div class="input-group">
                            <input type="text" id="nameFilter" class="form-control" placeholder="Filter by name...">
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-hover" id="guitarsTable">
                            <thead class="table-dark">
                            <tr>
                                <th onclick="sortTable(0)" class="sortable">ID <span class="sort-icon"></span></th>
                                <th onclick="sortTable(1)" class="sortable">Name <span class="sort-icon"></span></th>
                                <th onclick="sortTable(2)" class="sortable">Brand <span class="sort-icon"></span></th>
                                <th onclick="sortTable(3)" class="sortable">Type <span class="sort-icon"></span></th>
                                <th>Description</th>
                                <th>details</th>
                            </tr>
                            </thead>
                            <tbody>
                            <% guitars.forEach(g => { %>
                                <tr>
                                    <td><%= g.id %></td>
                                    <td><strong><%= g.name %></strong></td>
                                    <td>
                                        <a href="/brand/<%= g.brand.id %>" class="badge bg-info text-decoration-none">
                                            <%= g.brand.brandName %>
                                        </a>
                                    </td>
                                    <td>
                                        <span class="badge bg-warning text-dark"><%= g.type.charAt(0).toUpperCase() + g.type.slice(1) %></span>
                                    </td>
                                    <td><%= g.description.length > 50 ? g.description.substring(0, 50) + '...' : g.description %></td>
                                    <td>
                                        <a href="/guitar/<%= g.id %>" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye me-1"></i> View
                                        </a>
                                    </td>
                                </tr>
                            <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<!-- Font Awesome for icons -->
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

<style>
    .sortable {
        cursor: pointer;
    }
    .sortable:hover {
        background-color: #343a40;
    }
    .sort-icon::after {
        content: "⇵";
        margin-left: 5px;
        opacity: 0.5;
    }
    .asc::after {
        content: "↑";
        opacity: 1;
    }
    .desc::after {
        content: "↓";
        opacity: 1;
    }
</style>

<script>
    // Variable to track sorting order
    let sortOrders = [0, 0, 0, 0, 0]; // 0: none, 1: asc, 2: desc

    function sortTable(columnIndex) {
        const table = document.getElementById("guitarsTable");
        const tbody = table.querySelector("tbody");
        const rows = Array.from(tbody.querySelectorAll("tr"));
        const headers = table.querySelectorAll("th.sortable");

        // Reset other column headers
        headers.forEach((header, index) => {
            if (index !== columnIndex) {
                header.querySelector('.sort-icon').className = 'sort-icon';
                sortOrders[index] = 0;
            }
        });

        // Update current column sort order
        sortOrders[columnIndex] = (sortOrders[columnIndex] + 1) % 3;
        const sortIcon = headers[columnIndex].querySelector('.sort-icon');

        if (sortOrders[columnIndex] === 0) {
            // Reset to original order
            sortIcon.className = 'sort-icon';
            location.reload(); // Simpler way to restore original order
            return;
        } else if (sortOrders[columnIndex] === 1) {
            // Ascending order
            sortIcon.className = 'sort-icon asc';
        } else {
            // Descending order
            sortIcon.className = 'sort-icon desc';
        }

        // Sort rows
        rows.sort((a, b) => {
            let valueA = a.cells[columnIndex].textContent.trim();
            let valueB = b.cells[columnIndex].textContent.trim();

            // If we're sorting ID column, convert to numbers
            if (columnIndex === 0) {
                valueA = parseInt(valueA);
                valueB = parseInt(valueB);
                return sortOrders[columnIndex] === 1 ? valueA - valueB : valueB - valueA;
            } else {
                // String comparison for other columns
                return sortOrders[columnIndex] === 1
                    ? valueA.localeCompare(valueB)
                    : valueB.localeCompare(valueA);
            }
        });

        // Reorder table
        rows.forEach(row => tbody.appendChild(row));
    }

    function filterTable() {
        const filter = document.getElementById('nameFilter').value.toLowerCase();
        const table = document.getElementById('guitarsTable');
        const rows = table.querySelectorAll('tbody tr');

        rows.forEach(row => {
            const nameCell = row.cells[1]; // Name column
            const nameText = nameCell.textContent.toLowerCase();

            if (nameText.includes(filter)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    // Also filter when typing (real-time filtering)
    document.getElementById('nameFilter').addEventListener('keyup', filterTable);
</script>
</body>
</html>